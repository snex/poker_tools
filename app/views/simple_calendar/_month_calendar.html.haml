.simple-calendar#calendar
  - month_records = @ps_records.where("date_part('year', start_time) = ? and date_part('month', start_time) = ?", start_date.year, start_date.month)
  .calendar-heading{class: bg_color_by_result(month_records.results)}
    %div.text-center
      %h2.calendar-title
        = t('date.month_names')[start_date.month]
        = start_date.year
      %div
        %div= "$#{month_records.results}"
        %div= month_records.duration.to_elapsed_time
        %div= "$#{month_records.hourly}/hr"
  = link_to t('simple_calendar.previous', default: '<<'), calendar.url_for_previous_view, remote: true
  |
  = link_to t('simple_calendar.current', default: 'Cur'), url_for(@params.merge(start_date: (Date.current).iso8601)), remote: true
  |
  = link_to t('simple_calendar.next', default: '>>'), calendar.url_for_next_view, remote: true
  %table.table.table-bordered.table-striped
    %thead
      %tr
        - date_range.slice(0, 7).each do |day|
          %th= t('date.abbr_day_names')[day.wday]
    %tbody
      - date_range.each_slice(7) do |week|
        %tr
          - week.each do |day|
            = content_tag :td, class: calendar.td_classes_for(day) do
              - if defined?(Haml) && respond_to?(:block_is_haml?) && block_is_haml?(passed_block)
                - capture_haml(day, sorted_events.fetch(day, []), &passed_block)
              - else
                - passed_block.call day, sorted_events.fetch(day, [])
